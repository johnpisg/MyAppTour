/*
 * Please see the included README.md file for license terms and conditions.
 */


// This file is a suggested starting place for your code.
// It is completely optional and not required.
// Note the reference that includes it in the index.html file.


/*jslint browser:true, devel:true, white:true, vars:true */
/*global $:false, intel:false app:false, dev:false, cordova:false */


// For improved debugging and maintenance of your app, it is highly
// recommended that you separate your JavaScript from your HTML files.
// Use the addEventListener() method to associate events with DOM elements.

// For example:

// var el ;
// el = document.getElementById("id_myButton") ;
// el.addEventListener("click", myEventHandler, false) ;



// The function below is an example of the best way to "start" your app.
// This example is calling the standard Cordova "hide splashscreen" function.
// You can add other code to it or add additional functions that are triggered
// by the same event or other events.

function onLoad() {
    console.log("OnLoad..");
    console.log("Watching position..");
    var mostrandoPopup = false;
    //navigator.geolocation.getCurrentPosition(function(position) {
    var watchId = navigator.geolocation.watchPosition(function(position) {
        console.log("position");
        console.log(position);
        //Si se logro obtener la posición limpiar el timer
        navigator.geolocation.clearWatch(watchId);
        
    }, function(er) {
        console.log("error");
        console.log(er);
        switch(er.code)
        {
            case 1:
                console.log("PERMISSION DENIED");
                break;
            case 2:
                console.log("POSITION_UNAVAILABLE");
                break;
            case 3:
                console.log("TIMEOUT");
                break;
            default:
                console.log("UNKNOWN ERROR");
                break;
        }
        
        //ver si está activo el GPS
        try{
            cordova.plugins.diagnostic.isGpsLocationEnabled(function(enabled){
                console.log("GPS is " + (enabled ? "enabled" : "disabled"));
                if(enabled) {
                    navigator.geolocation.clearWatch(watchId);
                }else{
                    //Activar GPS
                    if(!mostrandoPopup){
                        mostrandoPopup = true;
                        var r = confirm("Necesitamos acceder a su ubicación y parece que tiene su GPS desactivado.\n¿Desea activarlo ahora?");
                        if (r == true) {
                            cordova.plugins.diagnostic.switchToLocationSettings();
                        } else {

                        }
                    }
                }
            }, function(error){
                console.error("The following error occurred: "+error);
            }); 
        }catch(_Err_){};
        
    }, { maximumAge: 0, timeout: 5000, enableHighAccuracy: true });
}

function onDeviceReady() {
    console.log("onDeviceReady Ready!!!");   
    onLoad();
}

//document.addEventListener("app.Ready", onAppReady, false) ;
document.addEventListener("deviceready", onDeviceReady, false) ;
//document.addEventListener("onload", onDeviceReady, false) ;

// The app.Ready event shown above is generated by the init-dev.js file; it
// unifies a variety of common "ready" events. See the init-dev.js file for
// more details. You can use a different event to start your app, instead of
// this event. A few examples are shown in the sample code above. If you are
// using Cordova plugins you need to either use this app.Ready event or the
// standard Crordova deviceready event. Others will either not work or will
// work poorly.

// NOTE: change "dev.LOG" in "init-dev.js" to "true" to enable some console.log
// messages that can help you debug Cordova app initialization issues.
